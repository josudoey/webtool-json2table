{"version":3,"file":"96ab77ccac1b8fa8b425.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA,oBAAoB,6BAA6B;AACjD;AACA,oBAAoB,6BAA6B;AACjD;AACA,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC;AAC9E,+BAA+B;AAC/B;AACA;AACA,gDAAgD,SAAS,eAAe;AACxE;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAA+C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD,8CAA8C,SAAS,YAAY;AACnE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA,QAAQ,sDAAsD;AAC9D;AACA;AACA;AACA,YAAY,8BAA8B,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,+BAA+B,4BAA4B;AAC3D,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD,qBAAqB,eAAe;AACpC,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2CAA2C;AAClE,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;;ACvFyB;AAC6B;AACzB;AACiB;AAC9C;AACA;AACA,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,yCAAyC,4CAAI;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAI;AAC/B;AACA,KAAK;AACL;AACA;AACA,qBAAqB,wCAAW;AAChC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;ACnDqD;AACtD;AACA;AACA;AACA,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack:///../vue/pages/home/json-table/render.pug","webpack:///../vue/pages/home/render.pug","webpack:///../vue/pages/home/index.mjs","webpack:///../vue/pages/home/json-table/index.mjs"],"sourcesContent":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"d-inline-block small p-0 m-0 w-100\" }, [\n    _vm.isNull(_vm.value)\n      ? _c(\"div\", { staticClass: \"p-0 pb-1 m-0\" })\n      : _vm.isScalarType(_vm.value)\n      ? _c(\"div\", { staticClass: \"p-0 pb-1 m-0\" }, [_vm._v(_vm._s(_vm.value))])\n      : Array.isArray(_vm.value)\n      ? _c(\"table\", { staticClass: \"table table-bordered m-0\" }, [\n          _c(\n            \"tbody\",\n            [\n              _c(\n                \"tr\",\n                _vm._l(_vm.getColumns(_vm.value), function (name) {\n                  return _c(\n                    \"th\",\n                    { staticClass: \"p-0 m-0\" },\n                    [\n                      name === _vm.ScalarType\n                        ? void 0\n                        : _vm.getColumnName(name) !== null\n                        ? [_vm._v(_vm._s(_vm.getColumnName(name)))]\n                        : _vm._e(),\n                    ],\n                    2\n                  )\n                }),\n                0\n              ),\n              _vm._l(_vm.value, function (item, index) {\n                return _c(\n                  \"tr\",\n                  _vm._l(_vm.getColumns(_vm.value), function (key) {\n                    return _c(\n                      \"td\",\n                      { staticClass: \"p-0 m-0\" },\n                      [\n                        _vm.isNull(item)\n                          ? void 0\n                          : key === _vm.ScalarType && _vm.isScalarType(item)\n                          ? [_vm._v(_vm._s(item))]\n                          : _vm.getColumnName(key) !== null\n                          ? [\n                              _c(\"json-table\", {\n                                attrs: { value: item[_vm.getColumnName(key)] },\n                              }),\n                            ]\n                          : _vm.isArrayItem(index, item)\n                          ? [_c(\"json-table\", { attrs: { value: item } })]\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  }),\n                  0\n                )\n              }),\n            ],\n            2\n          ),\n        ])\n      : typeof _vm.value === \"object\"\n      ? _c(\n          \"table\",\n          { staticClass: \"table table table-bordered m-0\" },\n          [\n            Object.keys(_vm.value).length > 0\n              ? [\n                  _c(\n                    \"tbody\",\n                    _vm._l(_vm.value, function (v, key) {\n                      return _c(\"tr\", [\n                        _c(\"th\", { staticClass: \"p-0 m-0\" }, [\n                          _vm._v(_vm._s(key)),\n                        ]),\n                        _c(\n                          \"td\",\n                          { staticClass: \"p-0 m-0\" },\n                          [_c(\"json-table\", { attrs: { value: v } })],\n                          1\n                        ),\n                      ])\n                    }),\n                    0\n                  ),\n                ]\n              : _vm._e(),\n          ],\n          2\n        )\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container-fluid px-0\" }, [\n    _vm._m(0),\n    _c(\n      \"div\",\n      { staticClass: \"container-fluid px-0 d-flex flex-wrap\" },\n      [\n        _c(\n          \"b-card\",\n          { staticClass: \"w-50\", attrs: { \"no-body\": \"\" } },\n          [\n            _c(\"b-card-body\", [\n              _c(\"textarea\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.text,\n                    expression: \"text\",\n                  },\n                ],\n                staticClass: \"w-100\",\n                staticStyle: { \"min-height\": \"calc(60vh)\" },\n                domProps: { value: _vm.text },\n                on: {\n                  input: [\n                    function ($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.text = $event.target.value\n                    },\n                    _vm.translate,\n                  ],\n                },\n              }),\n            ]),\n          ],\n          1\n        ),\n        _c(\n          \"b-card\",\n          {\n            staticClass: \"w-50\",\n            staticStyle: { \"min-height\": \"calc(60vh)\" },\n            attrs: { \"no-body\": \"\" },\n          },\n          [\n            _c(\n              \"b-card-body\",\n              [\n                _c(\"json-table\", {\n                  staticClass: \"w-50\",\n                  model: {\n                    value: _vm.value,\n                    callback: function ($$v) {\n                      _vm.value = $$v\n                    },\n                    expression: \"value\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ],\n          1\n        ),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"nav\", { staticClass: \"navbar navbar-dark bg-dark\" }, [\n      _c(\"div\", { staticClass: \"navbar-brand d-flex\" }, [\n        _c(\"div\", [_vm._v(\"JSON to table\")]),\n      ]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import JSON5 from 'json5'\nimport { render, staticRenderFns } from './render.pug'\nimport { pick } from 'lodash'\nimport JsonTable from './json-table/index.mjs'\nconst persistKey = 'state'\nconst persistProps = ['text']\nexport default {\n  render,\n  staticRenderFns,\n  components: {\n    JsonTable\n  },\n  data: () => {\n    return {\n      text: '{hello: \\'world\\'}',\n      value: ''\n    }\n  },\n  mounted () {\n    this.load()\n    this.translate()\n  },\n  updated () {\n    this.save()\n  },\n  methods: {\n    save: function () {\n      const persisValue = JSON.stringify(pick(this.$data, persistProps))\n      window.sessionStorage.setItem(persistKey, persisValue)\n    },\n    load () {\n      const state = window.sessionStorage.getItem(persistKey)\n      if (!state) {\n        return\n      }\n      const persistState = pick(JSON.parse(state), persistProps)\n      Object.assign(this.$data, persistState)\n    },\n    translate () {\n      try {\n        this.value = JSON5.parse(this.text)\n        this.save()\n      } catch (err) {\n        this.$bvToast.toast(err.message, {\n          title: 'Parse Error',\n          autoHideDelay: 1000,\n          appendToast: true\n        })\n      }\n    }\n  }\n}\n","import { render, staticRenderFns } from './render.pug'\nconst ScalarType = Symbol('ScalarType')\nconst ObjectType = Symbol('ObjectType')\nconst ArrayType = Symbol('ArrayType')\nexport default {\n  render,\n  staticRenderFns,\n  name: 'json-table',\n  props: ['value'],\n  data: () => {\n    return {\n      ScalarType: ScalarType\n    }\n  },\n  mounted () {\n  },\n  methods: {\n    typeof (v) {\n      return typeof v\n    },\n    isNull (item) {\n      return typeof item === 'undefined' || item === null\n    },\n    isScalarType (item) {\n      const typ = typeof item\n      return typ === 'string' || typ === 'number' || typ === 'boolean'\n    },\n    getColumnName (sym) {\n      if (typeof sym !== 'symbol') {\n        return null\n      }\n      return sym.description\n    },\n    isArrayItem (index, item) {\n      if (typeof item !== 'object') {\n        return false\n      }\n      return this.value[index] === item\n    },\n    getColumns (items) {\n      const columns = new Set()\n      const names = new Set()\n      for (const item of items) {\n        if (Array.isArray(item)) {\n          columns.add(item)\n          continue\n        } else if (this.isNull(item)) {\n          columns.add(null)\n          continue\n        } else if (typeof item === 'object') {\n          for (const name of Object.keys(item)) {\n            if (names.has(name)) {\n              continue\n            }\n            names.add(name)\n            columns.add(Symbol(name))\n          }\n          continue\n        }\n        columns.add(ScalarType)\n      }\n      return Array.from(columns)\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}