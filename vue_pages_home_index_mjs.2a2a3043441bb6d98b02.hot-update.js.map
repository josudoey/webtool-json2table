{"version":3,"file":"vue_pages_home_index_mjs.2a2a3043441bb6d98b02.hot-update.js","mappings":";;;;;;;;;;;;;;AAAsD;AACtD;AACA,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack:///../vue/pages/home/json-table/index.mjs"],"sourcesContent":["import { render, staticRenderFns } from './render.pug'\nconst ScalarType = Symbol('ArrayType')\nexport default {\n  render,\n  staticRenderFns,\n  name: 'json-table',\n  props: ['value'],\n  data: () => {\n    return {\n      ScalarType: ScalarType\n    }\n  },\n  mounted () {\n  },\n  methods: {\n    typeof (v) {\n      return typeof v\n    },\n    isNull (item) {\n      return typeof item === 'undefined' || item === null\n    },\n    isScalarType (item) {\n      const typ = typeof item\n      return typ === 'string' || typ === 'number' || typ === 'boolean'\n    },\n    getColumnName (sym) {\n      if (typeof sym !== 'symbol') {\n        return null\n      }\n      return sym.description\n    },\n    getColumnNames (items) {\n      const names = new Set()\n      for (const item of items) {\n        if (Array.isArray(item)) {\n          names.add(item)\n          continue\n        } else if (this.isNull(item)) {\n          names.add(null)\n          continue\n        } else if (typeof item === 'object') {\n          for (const name of Object.keys(item)) {\n            names.add(name)\n          }\n          continue\n        }\n        names.add(ScalarType)\n      }\n      return Array.from(names)\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}