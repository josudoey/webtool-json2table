{"version":3,"file":"vue_pages_home_index_mjs.5f881944e068a694c9d5.hot-update.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA,oBAAoB,6BAA6B;AACjD;AACA,oBAAoB,6BAA6B;AACjD;AACA,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC;AAC9E,+BAA+B;AAC/B;AACA;AACA,gDAAgD,SAAS,eAAe;AACxE;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAA+C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD,8CAA8C,SAAS,YAAY;AACnE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjGsD;AACtD;AACA;AACA;AACA,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack:///../vue/pages/home/json-table/render.pug","webpack:///../vue/pages/home/json-table/index.mjs"],"sourcesContent":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"d-inline-block small p-0 m-0 w-100\" }, [\n    _vm.isNull(_vm.value)\n      ? _c(\"div\", { staticClass: \"p-0 pb-1 m-0\" })\n      : _vm.isScalarType(_vm.value)\n      ? _c(\"div\", { staticClass: \"p-0 pb-1 m-0\" }, [_vm._v(_vm._s(_vm.value))])\n      : Array.isArray(_vm.value)\n      ? _c(\"table\", { staticClass: \"table table-bordered m-0\" }, [\n          _c(\n            \"tbody\",\n            [\n              _c(\n                \"tr\",\n                _vm._l(_vm.getColumns(_vm.value), function (name) {\n                  return _c(\n                    \"th\",\n                    { staticClass: \"p-0 m-0\" },\n                    [\n                      name === _vm.ScalarType\n                        ? void 0\n                        : _vm.getColumnName(name) !== null\n                        ? [_vm._v(_vm._s(_vm.getColumnName(name)))]\n                        : _vm._e(),\n                    ],\n                    2\n                  )\n                }),\n                0\n              ),\n              _vm._l(_vm.value, function (item, index) {\n                return _c(\n                  \"tr\",\n                  _vm._l(_vm.getColumns(_vm.value), function (key) {\n                    return _c(\n                      \"td\",\n                      { staticClass: \"p-0 m-0\" },\n                      [\n                        _vm.isNull(item)\n                          ? void 0\n                          : key === _vm.ScalarType && _vm.isScalarType(item)\n                          ? [_vm._v(_vm._s(item))]\n                          : _vm.getColumnName(key) !== null\n                          ? [\n                              _c(\"json-table\", {\n                                attrs: { value: item[_vm.getColumnName(key)] },\n                              }),\n                            ]\n                          : _vm.isArrayItem(index, item)\n                          ? [_c(\"json-table\", { attrs: { value: item } })]\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  }),\n                  0\n                )\n              }),\n            ],\n            2\n          ),\n        ])\n      : typeof _vm.value === \"object\"\n      ? _c(\n          \"table\",\n          { staticClass: \"table table table-bordered m-0\" },\n          [\n            Object.keys(_vm.value).length > 0\n              ? [\n                  _c(\n                    \"tbody\",\n                    _vm._l(_vm.value, function (v, key) {\n                      return _c(\"tr\", [\n                        _c(\"th\", { staticClass: \"p-0 m-0\" }, [\n                          _vm._v(_vm._s(key)),\n                        ]),\n                        _c(\n                          \"td\",\n                          { staticClass: \"p-0 m-0\" },\n                          [_c(\"json-table\", { attrs: { value: v } })],\n                          1\n                        ),\n                      ])\n                    }),\n                    0\n                  ),\n                ]\n              : _vm._e(),\n          ],\n          2\n        )\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from './render.pug'\nconst ScalarType = Symbol('ScalarType')\nconst ObjectType = Symbol('ObjectType')\nconst ArrayType = Symbol('ArrayType')\nexport default {\n  render,\n  staticRenderFns,\n  name: 'json-table',\n  props: ['value'],\n  data: () => {\n    return {\n      ObjectType,\n      ArrayType,\n      ScalarType\n    }\n  },\n  mounted () {\n  },\n  methods: {\n    typeof (v) {\n      return typeof v\n    },\n    isNull (item) {\n      return typeof item === 'undefined' || item === null\n    },\n    isScalarType (item) {\n      const typ = typeof item\n      return typ === 'string' || typ === 'number' || typ === 'boolean'\n    },\n    getColumnName (sym) {\n      if (typeof sym !== 'symbol') {\n        return null\n      }\n      return sym.description\n    },\n    isArrayItem (index, item) {\n      if (typeof item !== 'object') {\n        return false\n      }\n      return this.value[index] === item\n    },\n    getColumns (items) {\n      const columns = new Set()\n      const names = new Set()\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        if (Array.isArray(item)) {\n          columns.add([, ArrayType])\n          continue\n        } else if (this.isNull(item)) {\n          columns.add(null)\n          continue\n        } else if (typeof item === 'object') {\n          for (const name of Object.keys(item)) {\n            if (names.has(name)) {\n              continue\n            }\n            names.add(name)\n            columns.add(Symbol(name))\n          }\n          continue\n        }\n        columns.add(ScalarType)\n      }\n      return Array.from(columns)\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}